Title      : Git blogging with Aerial
Tags       : projects, ruby, git, sinatra
Published  : 04/04/2009
Author     : Matt Sears

Over the last few years, I have grown tired of maintaining, migrating, and upgrading blog software.  I'm convinced now that rolling your own blog is the way to go for hackers. In doing so, I wanted to keep things as simple as possible with a basic set of features: articles, pages, comments, rss, etc. What I don't want is a  SQL database nor an administration tool. I wanted to write articles in my text editor (Emacs), in Markdown, and versioned with Git. So I've ported this site from Mephisto to my own custom app. I call it Aerial.

Much inspiration for Aerial has come from [Marley](http://github.com/karmi/marley), a minimal flat-file blog engine written in Sinatra. Like Marley, Aerial is built with Sinatra and uses plain text files. Unlike Marley, Aerial doesn't use a SQL database and uses [Grit](http://github.com/mojombo/grit) to retrieve articles and comments from a Git repository.

So how does it work?
----

Articles and comments are stored as plain text files in a local Git directory. Aerial parses each file can converts them the Article and Comment objects with their own set of attributes such as title, tags, and author. For example, this article looks like this:

    Title      : Git blogging with Aerial
    Tags       : projects, ruby, git, sinatra
    Published  : 03/28/2009
    Author     : Matt Sears

    Over the last few years...

Since Aerial reads the articles from the Git repository, the contents of article won't display in the browser unless the changes are committed to Git. Same goes for comments.  When comments are submitted on the site, they are check for Spam with help form Akismet and stored in the same directory as the article.  When running in production, comments are automatically committed to the local Git repository and pushed to the remote repository.

Getting Started
----

For Aerial to work, you'll need Git installed and the following RubyGems installed:

    sudo gem install sinatra grit rdiscount haml

Clone the Aerial git repository from Github:

    git clone git://github.com/[YOUR USERNAME]/aerial.git

A small configuration file in config/config.yml is used to store information about your blog. You can add your info now or leave it as is and it will still work. To setup and run Aerial, we need to run the boostrap Rake task:

    rake bootstrap

This will install the necessary directories (specified in the config.yml file), javascript files, and insert a sample article to get you started. If every goes smoothly, Sinatra should be up and running at

    http://localhost:4567

Creating new articles
----

Create a new directory in the app/articles directory.  You can name the directory anything you want, but it may be helpful to number them so they display in order. For example, the directory for this articles looks like this:

    app/articles/001-introducing-aerial

Next, create a text file with an extension ".article" in the new directory.  The ".article" file extension let's Aerial know that this file contains information about the article.  The name of the article will be the article's permalink. Remember, the article will not display on the site until it's committed to the git repository.

Deployment
----

Deployment tasks are handled with [Vlad the Deployer](http://rubyhitsquad.com/Vlad_the_Deployer.html). A simple deployment script is located at config/deploy.rb. It assumes your running Apache with Phusions Passenger, but you can edit this file with your own settings and run:

    rake deploy

Future enhancements may include auto-syncing with post-receive hooks so that 'git push' will tell Github to post a request to Aerial to update it's self.

This is by no means a comprehensive introduction. If you have any questions or run into any problems, please drop me a line.
